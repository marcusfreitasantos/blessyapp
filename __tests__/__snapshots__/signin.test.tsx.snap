// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Signin/> Should render login screen 1`] = `
<View
  bg="$primary500"
  data-style=""
  dataSet={
    {
      "style": "",
    }
  }
  h="100%"
  p={40}
  style={
    [
      undefined,
      {},
      undefined,
    ]
  }
>
  <Text
    bold={true}
    data-style=""
    dataSet={
      {
        "style": "",
      }
    }
    py={20}
    size="6xl"
    style={
      [
        undefined,
        {},
        {
          "color": "white",
        },
        undefined,
      ]
    }
  >
    Blessy
  </Text>
  <View
    bg="white"
    data-style=""
    dataSet={
      {
        "style": "",
      }
    }
    hardShadow="1"
    p={20}
    reversed={false}
    rounded={3}
    space="xl"
    style={
      [
        undefined,
        {},
        undefined,
      ]
    }
    w="100%"
  >
    <View
      data-style=""
      dataSet={
        {
          "style": "",
        }
      }
      p={10}
      size="md"
      style={
        [
          undefined,
          {},
          undefined,
        ]
      }
      variant="outline"
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="24"
        bbWidth="24"
        data-style=""
        dataSet={
          {
            "style": "",
          }
        }
        fill="none"
        focusable={false}
        height={24}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            [
              undefined,
              {},
              undefined,
              {},
              undefined,
            ],
            {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        testID="input__icon"
        vbHeight={24}
        vbWidth={24}
        width={24}
        xmlns="http://www.w3.org/2000/svg"
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "type": 2,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="2"
        >
          <RNSVGRect
            fill={null}
            height="16"
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            rx="2"
            stroke={
              {
                "type": 2,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
            testID="input__icon"
            width="20"
            x="2"
            y="4"
          />
          <RNSVGPath
            d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "type": 2,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
            testID="input__icon"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
      <TextInput
        accessible={true}
        aria-label="Input Field"
        aria-selected={false}
        data-style=""
        dataSet={
          {
            "style": "",
          }
        }
        editable={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Email"
        placeholderTextColor="#aaa"
        secureTextEntry={false}
        style={
          [
            undefined,
            {},
            {
              "color": "#aaa",
            },
            undefined,
          ]
        }
        type="text"
        value=""
      />
    </View>
    <View
      data-style=""
      dataSet={
        {
          "style": "",
        }
      }
      p={10}
      size="md"
      style={
        [
          undefined,
          {},
          undefined,
        ]
      }
      variant="outline"
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="24"
        bbWidth="24"
        data-style=""
        dataSet={
          {
            "style": "",
          }
        }
        fill="none"
        focusable={false}
        height={24}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke="currentColor"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth={2}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            [
              undefined,
              {},
              undefined,
              {},
              undefined,
            ],
            {
              "flex": 0,
              "height": 24,
              "width": 24,
            },
          ]
        }
        testID="input__icon"
        vbHeight={24}
        vbWidth={24}
        width={24}
        xmlns="http://www.w3.org/2000/svg"
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "type": 2,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="2"
        >
          <RNSVGRect
            fill={null}
            height="11"
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            rx="2"
            ry="2"
            stroke={
              {
                "type": 2,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
            testID="input__icon"
            width="18"
            x="3"
            y="11"
          />
          <RNSVGPath
            d="M7 11V7a5 5 0 0 1 10 0v4"
            fill={null}
            propList={
              [
                "fill",
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "type": 2,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
            testID="input__icon"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
      <TextInput
        accessible={true}
        aria-label="Input Field"
        aria-selected={false}
        data-style=""
        dataSet={
          {
            "style": "",
          }
        }
        editable={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Senha"
        placeholderTextColor="#aaa"
        secureTextEntry={true}
        style={
          [
            undefined,
            {},
            {
              "color": "#aaa",
            },
            undefined,
          ]
        }
        type="password"
        value=""
      />
      <View
        accessibilityElementsHidden={true}
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        data-style=""
        dataSet={
          {
            "style": "",
          }
        }
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        pr={0}
        style={
          [
            undefined,
            {},
            undefined,
          ]
        }
        tabIndex={-1}
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight="100%"
          bbWidth="100%"
          data-style=""
          dataSet={
            {
              "style": "",
            }
          }
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          role="img"
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              [
                undefined,
                {},
                undefined,
                {},
                undefined,
                {},
                undefined,
                {},
                undefined,
              ],
              {
                "flex": 0,
                "height": "100%",
                "width": "100%",
              },
            ]
          }
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
          >
            <RNSVGGroup
              fill={
                {
                  "payload": 4278190080,
                  "type": 0,
                }
              }
            >
              <RNSVGPath
                d="M2 12C2 12 5 5 12 5C19 5 22 12 22 12C22 12 19 19 12 19C5 19 2 12 2 12Z"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                    "strokeWidth",
                    "strokeLinecap",
                    "strokeLinejoin",
                  ]
                }
                stroke={
                  {
                    "type": 2,
                  }
                }
                strokeLinecap={1}
                strokeLinejoin={1}
                strokeWidth="2"
              />
              <RNSVGPath
                d="M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z"
                fill={
                  {
                    "payload": 4278190080,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "stroke",
                    "strokeWidth",
                    "strokeLinecap",
                    "strokeLinejoin",
                  ]
                }
                stroke={
                  {
                    "type": 2,
                  }
                }
                strokeLinecap={1}
                strokeLinejoin={1}
                strokeWidth="2"
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      action="primary"
      collapsable={false}
      data-style=""
      dataSet={
        {
          "style": "",
        }
      }
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      role="button"
      size="md"
      style={
        [
          undefined,
          {},
          undefined,
        ]
      }
      variant="solid"
    >
      <Text
        data-style=""
        dataSet={
          {
            "style": "",
          }
        }
        style={
          [
            undefined,
            {},
            undefined,
            {},
            undefined,
          ]
        }
      >
        Login
         
      </Text>
    </View>
  </View>
  <View
    data-style=""
    dataSet={
      {
        "style": "",
      }
    }
    py={20}
    space="lg"
    style={
      [
        undefined,
        {},
        {
          "alignItems": "center",
          "justifyContent": "space-between",
        },
        undefined,
      ]
    }
    w="100%"
  >
    <Text
      href="/sign-up"
      onPress={[Function]}
      role="link"
    >
      <Text
        data-style=""
        dataSet={
          {
            "style": "",
          }
        }
        style={
          [
            undefined,
            {},
            {
              "color": "white",
            },
            undefined,
          ]
        }
      >
        Crie sua conta!
      </Text>
    </Text>
    <Text
      href="/home"
      onPress={[Function]}
      role="link"
    >
      <Text
        data-style=""
        dataSet={
          {
            "style": "",
          }
        }
        style={
          [
            undefined,
            {},
            {
              "color": "white",
            },
            undefined,
          ]
        }
      >
        Recuperar senha
      </Text>
    </Text>
  </View>
</View>
`;
